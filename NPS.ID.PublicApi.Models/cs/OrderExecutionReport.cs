//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.5.4.0 (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace NPS.ID.PublicApi.Models.Generated
{
    #pragma warning disable // Disable all warnings

    /// <summary>TODO: Description</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public partial class Error 
    {
        [Newtonsoft.Json.JsonProperty("errorCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ErrorCode ErrorCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("errorMessage", Required = Newtonsoft.Json.Required.AllowNull)]
        public string ErrorMessage { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Error FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Error>(data);
        }
    }
    
    /// <summary>TODO: Description</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public partial class OrderExecutionEntry 
    {
        [Newtonsoft.Json.JsonProperty("eventSequenceNo", Required = Newtonsoft.Json.Required.Always)]
        public int EventSequenceNo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("marketId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string MarketId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("tenantId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string TenantId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string UserId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("orderId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string OrderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("revisionNo", Required = Newtonsoft.Json.Required.Always)]
        public int RevisionNo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("previousOrderId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string PreviousOrderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("originalOrderId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string OriginalOrderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("updatedAt", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.DateTimeOffset UpdatedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("clientOrderId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string ClientOrderId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("portfolioId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string PortfolioId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("contractIds", Required = Newtonsoft.Json.Required.AllowNull)]
        public System.Collections.Generic.List<string> ContractIds { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaId", Required = Newtonsoft.Json.Required.Always)]
        public int DeliveryAreaId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("side", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionEntrySide Side { get; set; }
    
        [Newtonsoft.Json.JsonProperty("orderType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionEntryOrderType OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("unitPrice", Required = Newtonsoft.Json.Required.Always)]
        public int UnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Always)]
        public int Quantity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("timeInForce", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionEntryTimeInForce TimeInForce { get; set; }
    
        [Newtonsoft.Json.JsonProperty("sxpireTime", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.DateTimeOffset SxpireTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.AllowNull)]
        public string Text { get; set; }
    
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionEntryState State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("action", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionEntryAction Action { get; set; }
    
        [Newtonsoft.Json.JsonProperty("clipSize", Required = Newtonsoft.Json.Required.Always)]
        public int ClipSize { get; set; }
    
        [Newtonsoft.Json.JsonProperty("clipPriceChange", Required = Newtonsoft.Json.Required.Always)]
        public int ClipPriceChange { get; set; }
    
        [Newtonsoft.Json.JsonProperty("remainingQuantity", Required = Newtonsoft.Json.Required.Always)]
        public int RemainingQuantity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.AllowNull)]
        public System.Collections.Generic.List<Error> Errors { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OrderExecutionEntry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OrderExecutionEntry>(data);
        }
    }
    
    /// <summary>TODO: Description</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public partial class OrderExecutionReport 
    {
        [Newtonsoft.Json.JsonProperty("requestId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string RequestId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("memberId", Required = Newtonsoft.Json.Required.AllowNull)]
        public string MemberId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("errorType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OrderExecutionReportErrorType ErrorType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.AllowNull)]
        public System.Collections.Generic.List<Error> Errors { get; set; }
    
        [Newtonsoft.Json.JsonProperty("orders", Required = Newtonsoft.Json.Required.AllowNull)]
        public System.Collections.Generic.List<OrderExecutionEntry> Orders { get; set; }
    
        [Newtonsoft.Json.JsonProperty("updatedAt", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.DateTimeOffset UpdatedAt { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OrderExecutionReport FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OrderExecutionReport>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum ErrorCode
    {
        [System.Runtime.Serialization.EnumMember(Value = "MISSING_REQUIRED_FIELD")]
        MISSING_REQUIRED_FIELD = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "ILLEGAL_FIELD")]
        ILLEGAL_FIELD = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "FIELD_OUT_OF_RANGE")]
        FIELD_OUT_OF_RANGE = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "FIELD_FORMAT_INVALID")]
        FIELD_FORMAT_INVALID = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "ITEM_NOT_FOUND")]
        ITEM_NOT_FOUND = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = "ACCESS_MODE_VIOLATION")]
        ACCESS_MODE_VIOLATION = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = "THIRD_PARTY")]
        THIRD_PARTY = 6,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionEntrySide
    {
        [System.Runtime.Serialization.EnumMember(Value = "BUY")]
        BUY = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "SELL")]
        SELL = 1,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionEntryOrderType
    {
        [System.Runtime.Serialization.EnumMember(Value = "LIMIT")]
        LIMIT = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "ICEBERG")]
        ICEBERG = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "USER_DEFINED_BLOCK")]
        USER_DEFINED_BLOCK = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionEntryTimeInForce
    {
        [System.Runtime.Serialization.EnumMember(Value = "IOC")]
        IOC = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "FOK")]
        FOK = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "NON")]
        NON = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "GTD")]
        GTD = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "GFS")]
        GFS = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionEntryState
    {
        [System.Runtime.Serialization.EnumMember(Value = "PENDING")]
        PENDING = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "ACTI")]
        ACTI = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "HIBE")]
        HIBE = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "IACT")]
        IACT = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "REJECTED")]
        REJECTED = 4,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionEntryAction
    {
        [System.Runtime.Serialization.EnumMember(Value = "USER_ADDED")]
        USER_ADDED = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "USER_HIBERNATED")]
        USER_HIBERNATED = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "USER_MODIFIED")]
        USER_MODIFIED = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "USER_DELETED")]
        USER_DELETED = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "SYSTEM_HIBERNATED")]
        SYSTEM_HIBERNATED = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = "SYSTEM_MODIFIED")]
        SYSTEM_MODIFIED = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = "SYSTEM_DELETED")]
        SYSTEM_DELETED = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = "PARTIAL_EXECUTION")]
        PARTIAL_EXECUTION = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = "FULL_EXECUTION")]
        FULL_EXECUTION = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = "ICEBERG_SLICE_ADDED")]
        ICEBERG_SLICE_ADDED = 9,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.5.4.0")]
    public enum OrderExecutionReportErrorType
    {
        [System.Runtime.Serialization.EnumMember(Value = "NPM")]
        NPM = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "PRE_TRADE")]
        PRE_TRADE = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "MW")]
        MW = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "LTS")]
        LTS = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "XBID")]
        XBID = 4,
    
    }
}